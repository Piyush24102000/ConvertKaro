// import multer from 'multer';
// import util from 'util';

// // const PDFDocument = require('pdf-lib').PDFDocument;
// import { PDFDocument, PDFSecurityOptions } from 'pdf-lib';
// const PDFJS = require('pdfjs-dist');


// const upload = multer();

// export const config = {
//     api: {
//         bodyParser: false,
//         responseLimit: false,
//     },
// };

// export default async function handler(req, res) {
//     switch (req.query.task) {
//         case 'lock':
//             await docLock(req, res)
//             break;
//         case 'unlock':
//             await docUnlock(req, res)
//             break;
//     }
// }

// const docLock = async (req, res) => {
//     try {
//         const multerMiddleware = util.promisify(upload.single('file'));
//         await multerMiddleware(req, res);
//         const fileBuffer = req.file.buffer;
//         const { password } = req.body;


//       // Load the PDF file from the buffer
//       const pdfDoc = await PDFDocument.load(fileBuffer);

//       // Encrypt the PDF document with the specified password and permissions
//       pdfDoc.encrypt({
//           userPassword: password,
//           ownerPassword: password,
//           permissions: {
//               printing: true,
//               modifying: false,
//               copying: false,
//               annotating: false,
//               fillingForms: false,
//               contentAccessibility: false,
//               documentAssembly: false,
//           },
//       });

//       // Get the encrypted PDF buffer
//       const encryptedBuffer = await pdfDoc.save();

//       // Set the content type and headers for the response
//       res.setHeader('Content-Type', 'application/pdf');
//       res.setHeader('Content-Disposition', 'attachment; filename=locked.pdf');

//       // Send the encrypted PDF buffer as the response
//       res.send(encryptedBuffer);

//     } catch (error) {
//         console.log(error.message)
//         res.status(500).send("An error occurred while uploading the file.");
//     }
// }



// const docUnlock = async (req, res) => {
//     try {
//         const multerMiddleware = util.promisify(upload.single('file'));
//         await multerMiddleware(req, res);
//         const fileBuffer = req.file.buffer;

//     } catch (error) {
//         console.log(error.message)
//         res.status(500).send("An error occurred while uploading the file.");

//     }
// }
